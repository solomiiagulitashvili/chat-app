{"version":3,"sources":["actions/General.js","actions/Room.js","components/Header.js","containers/HeaderContainer.js","components/RoomsList.js","containers/RoomsListContainer.js","components/Room.js","containers/RoomContainer.js","components/Main.js","components/App.js","reducers/generalReducer.js","reducers/roomsList.js","reducers/index.js","index.js"],"names":["USERNAME_INPUT_CHANGE","USERNAME_CHANGE","TOGGLE_MODAL","ROOM_NAME_CHANGE","SET_ROOMS","SELECT_ROOM","DELETE_ROOM","getRooms","dispatch","getState","fetch","headers","then","res","json","rooms","setRooms","type","payload","onDeleteRoom","Header","setRoomName","props","onRoomNameChange","onToggleModal","onInputNameChange","e","onUserNameInputChange","target","value","onClickNameChange","onUserNameChange","onClickRoomNameChange","onCreateRoom","onInputRoomNameChange","this","userNameInputValue","userName","modal","roomNameInputValue","className","InputGroup","Input","placeholder","onChange","InputGroupAddon","addonType","Button","color","onClick","Modal","isOpen","toggle","ModalBody","Label","for","id","ModalFooter","React","Component","connect","general","roomName","state","method","body","JSON","stringify","name","RoomsList","roomsList","selectRoom","map","room","key","_id","Room","deleteRoom","onClickSend","socket","emit","author","text","message","data","setState","response","componentDidUpdate","prevProps","prevState","messagesList","document","querySelector","length","scrollTop","scrollHeight","clientHeight","onInputChange","socketIOClient","path","transports","nextProps","roomId","existantMessages","on","messages","console","log","stamp","tinydate","MMMM","d","toLocaleString","month","DD","getDate","itemMes","Date","datetime","find","selectedRoom","ok","Main","RoomsListContainer","RoomContainer","App","HeaderContainer","initialState","generalReducer","action","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.b8b40074.chunk.js","sourcesContent":["export const USERNAME_INPUT_CHANGE = \"USERNAME_INPUT_CHANGE\";\nexport const USERNAME_CHANGE = \"USERNAME_CHANGE\";\nexport const TOGGLE_MODAL = \"TOOGLE_MODAL\";\nexport const ROOM_NAME_CHANGE = \"ROOM_NAME_CHANGE\";\n\nexport const onUserNameInputChange = value => {\n  return {\n    type: USERNAME_INPUT_CHANGE,\n    payload: value\n  };\n};\n\nexport const onUserNameChange = () => {\n  return {\n    type: USERNAME_CHANGE\n  };\n};\n\nexport const onToggleModal = () => {\n  return {\n    type: TOGGLE_MODAL\n  };\n};\n\nexport const onRoomNameChange = roomName => {\n  return {\n    type: ROOM_NAME_CHANGE,\n    payload: roomName\n  };\n};\n","export const SET_ROOMS = \"SET_ROOMS\";\nexport const SELECT_ROOM = \"SELECT_ROOM\";\nexport const DELETE_ROOM = \"DELETE_ROOM\";\n\nexport const onCreateRoom = () => {\n  return (dispatch, getState) => {\n    const state = getState();\n    // console.log(state);\n    fetch(\"/api/room/\", {\n      method: \"POST\",\n      body: JSON.stringify({ name: state.general.roomNameInputValue }),\n      headers: {\n        \"Content-type\": \"application/json\"\n      }\n    }).then(() => {\n      dispatch(getRooms());\n    });\n  };\n};\n\nexport const getRooms = () => {\n  return (dispatch, getState) => {\n    const state = getState();\n    // console.log(state);\n    fetch(\"/api/room/\", {\n      headers: {\n        \"Content-type\": \"application/json\"\n      }\n    })\n      .then(res => res.json())\n      .then(rooms => {\n        dispatch(setRooms(rooms));\n      });\n  };\n};\n\nconst setRooms = rooms => {\n  return {\n    type: SET_ROOMS,\n    payload: rooms\n  };\n};\n\nexport const selectRoom = roomId => {\n  return {\n    type: SELECT_ROOM,\n    payload: roomId\n  };\n};\n\nexport const deleteRoom = () => {\n  return (dispatch, getState) => {\n    const state = getState();\n    fetch(\"/api/room/\", {\n      method: \"DELETE\",\n      body: JSON.stringify({ _id: state.rooms.selectedRoom }),\n      headers: {\n        \"Content-type\": \"application/json\"\n      }\n    })\n      .then(res => {\n        if (res.ok) {\n          dispatch(onDeleteRoom());\n        }\n      })\n      .then(() => {\n        dispatch(getRooms());\n      });\n  };\n};\n\nexport const onDeleteRoom = () => {\n  return {\n    type: DELETE_ROOM\n  };\n};\n","import React from \"react\";\nimport {\n  Button,\n  Input,\n  InputGroup,\n  InputGroupAddon,\n  Modal,\n  ModalBody,\n  ModalFooter,\n  Label\n} from \"reactstrap\";\n\nclass Header extends React.Component {\n  setRoomName = () => {\n    this.props.onRoomNameChange();\n    this.props.onToggleModal();\n  };\n\n  onInputNameChange = e => {\n    this.props.onUserNameInputChange(e.target.value);\n  };\n  onClickNameChange = () => {\n    this.props.onUserNameChange();\n  };\n  onClickRoomNameChange = () => {\n    this.props.onToggleModal();\n    this.props.onCreateRoom();\n  };\n  onInputRoomNameChange = e => {\n    this.props.onRoomNameChange(e.target.value);\n  };\n\n  render() {\n    const {\n      onToggleModal,\n      userNameInputValue,\n      userName,\n      modal,\n      roomNameInputValue\n    } = this.props;\n    return (\n      <header>\n        <h3 className=\"col-2\">Chatt-App</h3>\n        <div className=\"wrapper col-8 offset-2\">\n          <span className=\"username\">{userName} </span>\n          <div className=\"btns-wrapper\">\n            <InputGroup>\n              <Input\n                placeholder=\"Set your name...\"\n                value={userNameInputValue}\n                onChange={this.onInputNameChange}\n              />\n              <InputGroupAddon addonType=\"append\">\n                <Button color=\"primary\" onClick={this.onClickNameChange}>\n                  Set\n                </Button>\n              </InputGroupAddon>\n            </InputGroup>\n          </div>\n          <div className=\"btn-create\">\n            <Button color=\"primary\" onClick={onToggleModal}>\n              Create room\n            </Button>\n          </div>\n\n          <Modal isOpen={modal} toggle={onToggleModal}>\n            <ModalBody>\n              <Label for=\"roomName\">Room name</Label>\n              <Input\n                type=\"text\"\n                id=\"roomName\"\n                placeholder=\"Enter room name\"\n                value={roomNameInputValue}\n                onChange={this.onInputRoomNameChange}\n              />\n            </ModalBody>\n            <ModalFooter>\n              <Button color=\"primary\" onClick={this.onClickRoomNameChange}>\n                Create room\n              </Button>{\" \"}\n              <Button color=\"secondary\" onClick={onToggleModal}>\n                Cancel\n              </Button>\n            </ModalFooter>\n          </Modal>\n        </div>\n      </header>\n    );\n  }\n}\n\nexport default Header;\n","import {\n  onUserNameInputChange,\n  onUserNameChange,\n  onToggleModal,\n  onRoomNameChange\n} from \"../actions/General\";\nimport { onCreateRoom } from \"../actions/Room\";\nimport { connect } from \"react-redux\";\nimport Header from \"../components/Header\";\n\nconst mapStateToProps = ({ general }) => {\n  return {\n    userNameInputValue: general.userNameInputValue,\n    userName: general.userName,\n    modal: general.modal,\n    roomNameInputValue: general.roomNameInputValue\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onUserNameInputChange: value => dispatch(onUserNameInputChange(value)),\n    onUserNameChange: () => dispatch(onUserNameChange()),\n    onToggleModal: () => dispatch(onToggleModal()),\n    onRoomNameChange: roomName => dispatch(onRoomNameChange(roomName)),\n    onCreateRoom: () => dispatch(onCreateRoom())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\n","import React from \"react\";\n\nclass RoomsList extends React.Component {\n  componentDidMount() {\n    this.props.getRooms();\n  }\n\n  render() {\n    const { roomsList, selectRoom } = this.props;\n    return (\n      <div>\n        <ul className=\"room-list\">\n          {roomsList.map(room => {\n            return (\n              <li\n                key={room._id}\n                onClick={() => {\n                  selectRoom(room._id);\n                }}\n              >\n                {room.name}\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default RoomsList;\n","import { connect } from \"react-redux\";\nimport RoomsList from \"../components/RoomsList\";\nimport { getRooms, selectRoom } from \"../actions/Room\";\n\nconst mapStateToProps = ({ rooms }) => {\n  return {\n    roomsList: rooms.rooms\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getRooms: room => dispatch(getRooms(room)),\n    selectRoom: room => dispatch(selectRoom(room))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RoomsList);\n","import React from \"react\";\nimport { Button, Input, InputGroup, InputGroupAddon } from \"reactstrap\";\nimport tinydate from \"tinydate\";\nimport socketIOClient from \"socket.io-client\";\n\nclass Room extends React.Component {\n  constructor(props) {\n    super(props);\n    const endpoint = \"/api/socket/\";\n    this.socket = socketIOClient(\n      {\n        path: endpoint\n      },\n      { transports: [\"websocket\"] }\n    );\n    this.state = {\n      response: [],\n      message: \"\"\n      // room: this.props.room._id\n    };\n  }\n\n  onClick = () => {\n    this.props.deleteRoom();\n  };\n\n  componentWillReceiveProps(nextProps) {\n    if (\n      (!this.props.room && nextProps.room) ||\n      (nextProps.room && nextProps.room._id !== this.props.room._id)\n    ) {\n      const roomId = nextProps.room._id;\n      this.socket.emit(\"room\", roomId, existantMessages => {\n        this.setState({ response: existantMessages });\n      });\n    }\n  }\n\n  onClickSend = () => {\n    this.socket.emit(\n      \"message\",\n      {\n        author: this.props.userName,\n        text: this.state.message,\n        room: this.props.room._id\n      },\n      data => {\n        this.setState({\n          response: [...this.state.response, data]\n        });\n      }\n    );\n\n    this.setState({ message: \"\" });\n  };\n\n  componentDidUpdate = (prevProps, prevState) => {\n    const messagesList = document.querySelector(\".messages-list\");\n    if (prevState.response.length < this.state.response.length) {\n      messagesList.scrollTop =\n        messagesList.scrollHeight - messagesList.clientHeight;\n    }\n  };\n\n  componentDidMount() {\n    this.socket.on(\"messages\", messages => {\n      console.log(messages);\n      this.setState({ response: messages });\n    });\n  }\n\n  onInputChange = e => {\n    this.setState({ message: e.target.value });\n  };\n\n  render() {\n    const stamp = tinydate(\"{HH}:{mm}:{ss}, {MMMM} {DD}\", {\n      MMMM: d => d.toLocaleString(\"default\", { month: \"long\" }),\n      DD: d => d.getDate()\n    });\n    if (!this.props.room) {\n      return (\n        <div>\n          <p>Select or create room</p>\n        </div>\n      );\n    } else {\n      return (\n        <div>\n          <div className=\"room\">\n            <div className=\"room-header\">\n              <h4>{this.props.room.name} </h4>\n              <Button color=\"primary\" onClick={this.onClick}>\n                Delete room\n              </Button>\n            </div>\n            <div>\n              <ul className=\"chat\">\n                <div className=\"messages-list\">\n                  {this.state.response &&\n                    this.state.response.map(itemMes => (\n                      <li key={itemMes._id}>\n                        <h6>{itemMes.author} </h6>\n                        <p>{itemMes.text} </p>\n                        <span>{stamp(new Date(itemMes.datetime))}</span>\n                      </li>\n                    ))}\n                </div>\n                <InputGroup>\n                  <Input\n                    placeholder=\"Your message here...\"\n                    value={this.state.message}\n                    onChange={this.onInputChange}\n                  />\n                  <InputGroupAddon addonType=\"append\">\n                    <Button color=\"primary\" onClick={this.onClickSend}>\n                      Send\n                    </Button>\n                  </InputGroupAddon>\n                </InputGroup>\n              </ul>\n            </div>\n          </div>\n        </div>\n      );\n    }\n  }\n}\n\nexport default Room;\n","import { connect } from \"react-redux\";\nimport Room from \"../components/Room\";\nimport { deleteRoom, onDeleteRoom } from \"../actions/Room\";\n\nconst mapStateToProps = ({ rooms, general }) => {\n  return {\n    room: rooms.rooms.find(room => {\n      return room._id === rooms.selectedRoom;\n    }),\n    userName: general.userName\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    deleteRoom: () => dispatch(deleteRoom()),\n    onDeleteRoom: () => dispatch(onDeleteRoom())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Room);\n","import React from \"react\";\nimport RoomsListContainer from \"../containers/RoomsListContainer\";\nimport RoomContainer from \"../containers/RoomContainer\";\n\nclass Main extends React.Component {\n  render() {\n    return (\n      <div className=\"main\">\n        <div className=\"col-3\">\n          <RoomsListContainer />\n        </div>\n        <div className=\"col-8  offset-1\">\n          <RoomContainer />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Main;\n","import React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"../styles/index.scss\";\nimport HeaderContainer from \"../containers/HeaderContainer\";\nimport Main from \"./Main\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <HeaderContainer />\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","import {\n  USERNAME_INPUT_CHANGE,\n  USERNAME_CHANGE,\n  TOGGLE_MODAL,\n  ROOM_NAME_CHANGE\n} from \"../actions/General\";\n\nconst initialState = {\n  userNameInputValue: \"\",\n  userName: \"anonymous\",\n  modal: false,\n  roomNameInputValue: \"\"\n};\n\nfunction generalReducer(state = initialState, action) {\n  switch (action.type) {\n    case USERNAME_INPUT_CHANGE:\n      return { ...state, userNameInputValue: action.payload };\n    case USERNAME_CHANGE:\n      return {\n        ...state,\n        userNameInputValue: \"\",\n        userName: state.userNameInputValue\n      };\n    case TOGGLE_MODAL:\n      return { ...state, modal: !state.modal };\n    case ROOM_NAME_CHANGE:\n      return { ...state, roomNameInputValue: action.payload };\n  }\n  return state;\n}\n\nexport default generalReducer;\n","import { SET_ROOMS } from \"../actions/Room\";\nimport { SELECT_ROOM } from \"../actions/Room\";\nimport { DELETE_ROOM } from \"../actions/Room\";\n\nconst initialState = {\n  rooms: [],\n  selectedRoom: null\n};\n\nfunction roomsList(state = initialState, action) {\n  switch (action.type) {\n    case SET_ROOMS:\n      return { ...state, rooms: action.payload };\n    case SELECT_ROOM:\n      return { ...state, selectedRoom: action.payload };\n    case DELETE_ROOM:\n      return { ...state, selectedRoom: null };\n  }\n  return state;\n}\n\nexport default roomsList;\n","import { combineReducers } from \"redux\";\nimport generalReducer from \"./generalReducer\";\nimport roomsList from \"./roomsList\";\n\nconst rootReducer = combineReducers({\n  general: generalReducer,\n  rooms: roomsList\n});\n\nexport default rootReducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport rootReducer from \"./reducers\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\nconst store = createStore(\n  rootReducer,\n  {},\n  composeWithDevTools(applyMiddleware(thunk))\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}